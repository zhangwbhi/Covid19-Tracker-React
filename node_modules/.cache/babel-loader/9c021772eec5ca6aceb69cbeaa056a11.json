{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\15146\\\\Desktop\\\\CovidTrackerReact\\\\tracker-covid19\\\\src\\\\util.js\",\n    _this = this;\n\nimport React from \"react\";\nimport numeral from \"numeral\";\nimport { Circle, Popup } from \"react-leaflet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst casesTypeColors = {\n  cases: {\n    hex: \"#CC1034\",\n    rgb: \"rgb(204, 16, 52)\",\n    half_op: \"rgba(204, 16, 52, 0.5)\",\n    multiplier: 300\n  },\n  recovered: {\n    hex: \"#7dd71d\",\n    rgb: \"rgb(125, 215, 29)\",\n    half_op: \"rgba(125, 215, 29, 0.5)\",\n    multiplier: 500\n  },\n  deaths: {\n    hex: \"#fb4443\",\n    rgb: \"rgb(251, 68, 67)\",\n    half_op: \"rgba(251, 68, 67, 0.5)\",\n    multiplier: 1200\n  }\n};\nexport const sortData = data => {\n  let sortedData = [...data];\n  sortedData.sort((a, b) => {\n    if (a.cases > b.cases) {\n      return -1;\n    } else {\n      return 1;\n    }\n  });\n  return sortedData;\n};\nexport const prettyPrintStat = stat => stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\nexport const showDataOnMap = function (data) {\n  let casesType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"cases\";\n  return data.map(country => /*#__PURE__*/_jsxDEV(Circle, {\n    center: [country.countryInfo.lat, country.countryInfo.long],\n    color: casesTypeColors[casesType].hex,\n    fillColor: casesTypeColors[casesType].hex,\n    fillOpacity: 0.4,\n    radius: Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier,\n    children: /*#__PURE__*/_jsxDEV(Popup, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-flag\",\n          style: {\n            backgroundImage: `url(${country.countryInfo.flag})`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-name\",\n          children: country.country\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-confirmed\",\n          children: [\"Cases: \", numeral(country.cases).format(\"0,0\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-recovered\",\n          children: [\"Recovered: \", numeral(country.recovered).format(\"0,0\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-deaths\",\n          children: [\"Deaths: \", numeral(country.deaths).format(\"0,0\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, _this));\n};","map":{"version":3,"sources":["C:/Users/15146/Desktop/CovidTrackerReact/tracker-covid19/src/util.js"],"names":["React","numeral","Circle","Popup","casesTypeColors","cases","hex","rgb","half_op","multiplier","recovered","deaths","sortData","data","sortedData","sort","a","b","prettyPrintStat","stat","format","showDataOnMap","casesType","map","country","countryInfo","lat","long","Math","sqrt","backgroundImage","flag"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport numeral from \"numeral\";\r\nimport { Circle, Popup } from \"react-leaflet\";\r\n\r\nconst casesTypeColors = {\r\n    cases: {\r\n        hex: \"#CC1034\",\r\n        rgb: \"rgb(204, 16, 52)\",\r\n        half_op: \"rgba(204, 16, 52, 0.5)\",\r\n        multiplier: 300,\r\n    },\r\n    recovered: {\r\n        hex: \"#7dd71d\",\r\n        rgb: \"rgb(125, 215, 29)\",\r\n        half_op: \"rgba(125, 215, 29, 0.5)\",\r\n        multiplier: 500,\r\n    },\r\n    deaths: {\r\n        hex: \"#fb4443\",\r\n        rgb: \"rgb(251, 68, 67)\",\r\n        half_op: \"rgba(251, 68, 67, 0.5)\",\r\n        multiplier: 1200,\r\n    },\r\n};\r\n\r\nexport const sortData = (data) => {\r\n    let sortedData = [...data];\r\n    sortedData.sort((a, b) => {\r\n        if (a.cases > b.cases) {\r\n            return -1;\r\n        } else {\r\n            return 1;\r\n        }\r\n    });\r\n    return sortedData;\r\n};\r\n\r\nexport const prettyPrintStat = (stat) =>\r\n    stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\r\n\r\nexport const showDataOnMap = (data, casesType = \"cases\") =>\r\n    data.map((country) => (\r\n        <Circle\r\n            center={[country.countryInfo.lat, country.countryInfo.long]}\r\n            color={casesTypeColors[casesType].hex}\r\n            fillColor={casesTypeColors[casesType].hex}\r\n            fillOpacity={0.4}\r\n            radius={\r\n                Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\r\n            }\r\n        >\r\n            <Popup>\r\n                <div className=\"info-container\">\r\n                    <div\r\n                        className=\"info-flag\"\r\n                        style={{ backgroundImage: `url(${country.countryInfo.flag})` }}\r\n                    ></div>\r\n                    <div className=\"info-name\">{country.country}</div>\r\n                    <div className=\"info-confirmed\">\r\n                        Cases: {numeral(country.cases).format(\"0,0\")}\r\n                    </div>\r\n                    <div className=\"info-recovered\">\r\n                        Recovered: {numeral(country.recovered).format(\"0,0\")}\r\n                    </div>\r\n                    <div className=\"info-deaths\">\r\n                        Deaths: {numeral(country.deaths).format(\"0,0\")}\r\n                    </div>\r\n                </div>\r\n            </Popup>\r\n        </Circle>\r\n    ));"]},"metadata":{},"sourceType":"module"}